rule Chrome_Browser_Safe_Browsing_User_Bypass {
// This rule floats Chrome Safe Browsing findings and assigns a risk score

meta:
    // Greg removed the standard stuff
    author = "Sam the Eagle"
    description = "Triggered by Chrome Safe Browsing Event"
    severity = "Medium"

events:
    ($e.metadata.product_event_type = "badNavigationEvent" ) or
    ($e.metadata.product_event_type = "dangerousdownloadEvent") or
    ($e.metadata.product_event_type = "contentTransferEvent") or
    ($e.metadata.product_event_type = "unscannedFileEvent")
    $e.security_result.action_details = "EVENT_RESULT_BYPASSED"

    $e.security_result.description = $srDesc
    $e.principal.user.email_addresses = $userid

match:
    $userid over 5m

  outcome:
    // For a multi-event rule an aggregation function is required
    // e.g., risk_score = max(0)
    // See https://cloud.google.com/chronicle/docs/detection/yara-l-2-0-overview#outcome_conditionals_example_rule
    $security_description = array_distinct($srDesc)
    $Instances = count_distinct($userid)
    $SuspiciousURL = array_distinct($e.target.url )
    $risk_score = max(
      if ($e.security_result.description = "", 10) +
      if ($e.security_result.description = "THREAT_TYPE_UNSPECIFIED", 20) +
      if ($e.security_result.description = "DANGEROUS", 60) +
      if ($e.security_result.description = "UNWANTED_SOFTWARE", 50) +
      if ($e.security_result.description = "SOCIAL_ENGINEERING", 80) +
      if ($e.security_result.description = "MALWARE", 90)
        )


  condition:
    $e
}
